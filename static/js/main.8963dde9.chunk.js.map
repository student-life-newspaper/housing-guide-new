{"version":3,"sources":["logo.svg","components/Header.js","components/Filters.js","components/SingleListing.js","components/ModalCarousel.js","components/DormModal.js","components/Listings.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","Filters","buttons","this","options","map","option","ButtonToggle","active","selected","outline","color","key","onClick","e","onChange","ButtonGroup","React","Component","SingleListing","selectDorm","bind","dorm","Card","className","Row","noGutters","Col","md","src","process","shortName","alt","CardBody","CardTitle","tag","name","CardText","style","roomType","charAt","toLowerCase","slice","ModalCarousel","useState","activeIndex","setActiveIndex","animating","setAnimating","items","carouselImages","next","nextIndex","length","previous","slides","item","CarouselItem","onExiting","onExited","dormName","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","DormModal","closeModal","closeBtn","selectedDorm","Modal","isOpen","modalIsOpen","size","ModalHeader","close","ModalBody","toUpperCase","longDesc","ModalFooter","Button","dormData","Object","values","jsonData","Listings","keys","state","currentStyle","selectedStyle","getData","filter","setState","list","locationOptions","styleOptions","Main","onLocationSelection","onStyleSelection","selectedLocation","location","Container","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8963dde9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n//import { Container, Row, Col } from 'reactstrap';\n\nfunction Header(props){\n  return(\n    <div>\n      <h1>Welcome to Student Life’s Washington University Housing Guide!</h1>\n      <p>Curious what your first freshman residence hall will look like? Can’t figure out where you want to live next year? We’ve got you covered with our Housing Guide for all Residential Life dorms and apartments. Each page includes photos of the rooms and building, a list of pros and cons, pricing, estimated walk times and a summary. Please note: photographs are meant to be a representative sample of the dorm or apartment; there may be major variance between different rooms in the same building.</p>\n      <p>This is a living document, so feel free to make suggestions as we continually update and add to this guide. If you find any inaccurate information or would like to submit photos of your Residential Life suite or apartment, please contact photo@studlife.com</p>\n    </div>  \n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport { ButtonToggle, ButtonGroup } from 'reactstrap';\n\nclass Filters extends React.Component {\n  render(){\n    let buttons = this.props.options.map(option => {\n      return <ButtonToggle \n                active={this.props.selected === option} \n                outline color='primary' \n                key={option}\n                onClick={(e) => this.props.onChange(option, e)}>\n                {option}\n              </ButtonToggle>\n    });\n    return (\n      <ButtonGroup>\n        {buttons}\n      </ButtonGroup>\n    );\n  }\n}\n\nexport default Filters;\n","import React from 'react';\nimport { Container, Row, Col, Card, CardText, \n  CardBody, CardTitle} from 'reactstrap';\n\nexport default class SingleListing extends React.Component {\n  constructor(props){\n    super(props);\n    this.selectDorm = this.selectDorm.bind(this);\n  }\n  \n  selectDorm(){\n    this.props.selectDorm(this.props.dorm);\n  }\n  \n  render(){\n    let dorm = this.props.dorm;\n    return(\n        <Card className='single-listing cursor-pointer w-100 mb-3' onClick={this.selectDorm}>\n          <Row noGutters>\n            <Col md='4'>\n              <img className='dorm-thumbnail' src={process.env.PUBLIC_URL + '/img/thumbs/' + this.props.dorm.shortName + '.png'} alt={dorm.shortName}/>\n            </Col>\n            <Col md='8'>\n              <CardBody>\n                <CardTitle tag='h2'>{dorm.name}</CardTitle>\n                <CardText>{dorm.style + ' ' + dorm.roomType.charAt(0).toLowerCase() + dorm.roomType.slice(1)}</CardText>\n              </CardBody>\n            </Col>\n          </Row>\n        </Card>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { Carousel,CarouselItem,CarouselControl,CarouselIndicators } from 'reactstrap';\n\nconst ModalCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n  const items = props.carouselImages;\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item}\n      >\n        <img src={'/img/' + props.dormName + '/' + item} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n\nexport default ModalCarousel;\n","import React from 'react';\nimport { Container, Row, Col, CardDeck,\n  Button, Modal, ModalHeader, ModalBody, ModalFooter, \n} from 'reactstrap';\nimport ModalCarousel from './ModalCarousel.js'\n\n// const facilities = {\n//   studyRoom,computerLab,elevator,kitchen,seminarRoom,musicPractice,laundryRoom,closeDining,closeParking,closeMail,closeMetro,closeClocktower,closeCirculator,timeToDUC,timeToBrookings,timeToLoop\n// };\n\nexport default class DormModal extends React.Component {\n  constructor(props){\n    super(props);\n    this.closeModal = this.closeModal.bind(this);\n    // this.getFacilities = this.getFacilities.bind(this);\n  };\n  \n  closeModal(){\n    this.props.closeModal();\n  }\n  \n  // getFacilities(dorm){\n  //   let hasFacilities = facilities.map(key => {\n  //     console.log(key)\n  //     console.log(dorm.key)\n  //     if(dorm.key === 'Yes')\n  //       return (<li key={key}>Close to {key}</li>)\n  //     else\n  //       return null\n  //   });\n  //   console.log(hasFacilities);\n  //   return (\n  //     <ul>\n  //       {hasFacilities}\n  //     </ul>\n  //   );\n  // }\n  \n  render(){\n    const closeBtn = <button className=\"close\" onClick={this.closeModal}>&times;</button>;\n    if(this.props.selectedDorm === null){\n      return <div></div>\n    }else{\n      const dorm = this.props.selectedDorm;\n      return (\n        <div>\n          <Modal className='dorm-modal w80' isOpen={this.props.modalIsOpen} size={'lg'}>\n            <ModalHeader tag='h3' className='d-flex align-items-center'close={closeBtn}>{dorm.name}</ModalHeader>\n            <ModalCarousel carouselImages={dorm.carouselImages} dormName={dorm.name} />\n            <ModalBody>\n              <Row className='text-center'>\n                <Col>\n                  {dorm.style} housing\n                </Col>\n                <Col>\n                  {dorm.roomType[0].toUpperCase()}{dorm.roomType.slice(1)}\n                </Col>\n                <Col>\n                  `Bathroom Type`\n                </Col>\n              </Row>\n              <p>{dorm.longDesc}</p>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.closeModal}>Close</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport { Container, Row, Col, CardDeck } from 'reactstrap';\nimport SingleListing from './SingleListing.js'\nimport DormModal from './DormModal.js'\n\nimport jsonData from '../data/south40freshman.json';\n\nconst dormData = Object.values(jsonData);\nconst dormNames = Object.keys(jsonData);\n\n\nclass Listings extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      currentStyle: this.props.selectedStyle,\n      selectedDorm: null,\n      modalIsOpen: false\n    };\n    this.getData = this.getData.bind(this);\n    this.selectDorm = this.selectDorm.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n  \n  getData(){\n    let data;\n    if(this.props.selectedStyle !== 'All'){\n      data = dormData.filter((dorm) => {\n        return dorm.style === this.props.selectedStyle;\n      });\n    }else{\n      data = dormData;\n    }\n    \n    return data;\n  }\n  \n  selectDorm(dorm){\n    this.setState(\n      {\n        selectedDorm: dorm,\n        modalIsOpen: true\n      }\n    );\n  }\n  \n  closeModal(){\n    this.setState({modalIsOpen: false});\n  }\n  \n  render(){\n    const currentData = this.getData();\n    const list = currentData.map(dorm =>\n      <SingleListing dorm={dorm} key={dorm.shortName} selectDorm={this.selectDorm}/>\n    );\n    return (\n      <Row className='listing-container mt-3'>\n        {list}\n      <DormModal selectedDorm={this.state.selectedDorm} closeModal={this.closeModal} modalIsOpen={this.state.modalIsOpen}/>\n      </Row>\n    );\n  }\n}\n\nexport default Listings;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Header from './Header.js';\nimport Filters from './Filters.js';\nimport Listings from './Listings.js';\n\nimport './Main.css'\n\nconst locationOptions = ['All', 'South 40', 'Village & Off Campus'];\nconst styleOptions = ['All','Modern', 'Traditional'];\n\nclass Main extends React.Component{\n  constructor(props){\n    super(props);\n    this.onLocationSelection = this.onLocationSelection.bind(this);\n    this.onStyleSelection = this.onStyleSelection.bind(this);\n    this.state = {\n      selectedLocation: 'All',\n      selectedStyle: 'All'\n    };\n  }\n  \n  onLocationSelection(location) {\n    this.setState({selectedLocation: location});\n  }\n  onStyleSelection(style){\n    this.setState({selectedStyle: style});\n  }\n  \n  render(){\n    return(\n      <Container>\n        <Row md='2'>\n          <Header />\n          <Col md='8' className=\"listings\">\n            <Filters selected={this.state.selectedLocation} options={locationOptions} onChange={this.onLocationSelection}/>\n            <Filters selected={this.state.selectedStyle} options={styleOptions} onChange={this.onStyleSelection}/>\n            <Listings selectedStyle={this.state.selectedStyle}/>\n          </Col>\n          <Col className=\"map\"></Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport logo from './logo.svg';\nimport Main from './components/Main.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"root\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}