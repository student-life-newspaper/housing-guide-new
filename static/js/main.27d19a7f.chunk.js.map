{"version":3,"sources":["logo.svg","components/Header.js","components/Filters.js","components/SingleListing.js","components/ModalCarousel.js","components/ModalMap.js","components/DormModal.js","components/Listings.js","components/SideMap.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","id","className","Filters","buttons","this","options","map","option","ButtonToggle","active","selected","key","color","onClick","e","onChange","ButtonGroup","React","Component","SingleListing","dorm","Card","tabIndex","selectDorm","Row","noGutters","Col","sm","style","backgroundImage","process","shortName","src","alt","CardBody","CardTitle","tag","name","CardText","roomType","charAt","toLowerCase","slice","ModalCarousel","useState","activeIndex","setActiveIndex","animating","setAnimating","items","carouselImages","i","length","value","substring","splice","unshift","next","nextIndex","previous","slides","item","CarouselItem","onExiting","onExited","dormName","visibility","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","ModalMap","getPosition","bind","getMarkers","coordinates","position","split","avgLat","avgLong","latArray","longArray","push","markers","Marker","console","error","Map","center","zoom","width","height","TileLayer","attribution","maxZoom","tileSize","zoomOffset","url","facilities","studyRoom","computerLab","elevator","kitchen","seminarRoom","musicPractice","laundryRoom","closeDining","closeParking","closeMail","closeMetro","closeClocktower","closeCirculator","walkTimes","timeToDUC","timeToBrookings","timeToLoop","DormModal","getFacilities","getWalkTimes","facilitiesElements","Object","keys","sort","key1","key2","xs","size","offset","md","timeElements","time","selectedDorm","closeButton","closeModal","Modal","isOpen","modalIsOpen","ModalHeader","close","ModalBody","toUpperCase","bathroomType","longDesc","ModalFooter","Button","Listings","state","list","data","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","mapBounds","locationPositions","SideMap","prevProps","hasOwnProperty","Popup","cursor","setState","selectedLocation","maxBounds","dormData","values","jsonData","locationOptions","Main","onLocationSelection","getData","filteredData","location","filter","Container","fluid","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"o5iCAAAA,EAAOC,QAAU,IAA0B,kC,0MCY5BC,MAVf,SAAgBC,GACd,OACE,yBAAKC,GAAG,iBAAiBC,UAAU,QACjC,sGACA,uhBACA,iS,gBCiBSC,E,uKApBH,IAAD,OACDC,EAAUC,KAAKL,MAAMM,QAAQC,KAAI,SAACC,GAAD,OACrC,kBAACC,EAAA,EAAD,CACEC,OAAQ,EAAKV,MAAMW,WAAaH,EAChCI,IAAKJ,EACLK,MAAM,UACNX,UAAU,aACVY,QAAS,SAACC,GAAD,OAAO,EAAKf,MAAMgB,SAASR,EAAQO,KAE3CP,MAGL,OACE,kBAACS,EAAA,EAAD,KACGb,O,GAfac,IAAMC,W,gCCGPC,E,kDACnB,WAAYpB,GAAQ,uCACZA,G,qDAGE,IAAD,OAGDqB,EAAOhB,KAAKL,MAAMqB,KACxB,OACE,kBAACC,EAAA,EAAD,CAAMpB,UAAU,2CAA2CqB,SAAS,IAAIT,QAAS,kBAAM,EAAKd,MAAMwB,WAAWH,KAC3G,kBAACI,EAAA,EAAD,CAAKC,WAAS,GACZ,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,yBAAK1B,UAAU,2BAA2B2B,MAAO,CAAEC,gBAAgB,OAAD,OAASC,qBAAT,uBAA8C1B,KAAKL,MAAMqB,KAAKW,UAA9D,WAChE,yBAAK9B,UAAU,iBAAiB+B,IAAG,UAAKF,qBAAL,uBAA0C1B,KAAKL,MAAMqB,KAAKW,UAA1D,QAA2EE,IAAKb,EAAKW,cAG5H,kBAACL,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAMhB,EAAKiB,MAC1B,kBAACC,EAAA,EAAD,eAAclB,EAAKQ,MAAnB,YAA4BR,EAAKmB,SAASC,OAAO,GAAGC,eAApD,OAAoErB,EAAKmB,SAASG,MAAM,a,GApB3DzB,IAAMC,W,gFCyDlCyB,EA1DO,SAAC5C,GAKrB,IALgC,IAAD,EACO6C,mBAAS,GADhB,mBACxBC,EADwB,KACXC,EADW,OAEGF,oBAAS,GAFZ,mBAExBG,EAFwB,KAEbC,EAFa,KAIzBC,EAAQlD,EAAMmD,eACXC,EAAI,EAAGA,EAAIF,EAAMG,SAAUD,EAAG,CACrC,IAAME,EAAQJ,EAAME,GACpB,GAA8B,aAA1BE,EAAMC,UAAU,EAAG,GAAmB,CACxCL,EAAMM,OAAOJ,EAAG,GAChBF,EAAMO,QAAQH,GACd,OAIJ,IAAMI,EAAO,WACX,IAAIV,EAAJ,CACA,IAAMW,EAAYb,IAAgBI,EAAMG,OAAS,EAAI,EAAIP,EAAc,EACvEC,EAAeY,KAGXC,EAAW,WACf,IAAIZ,EAAJ,CACA,IAAMW,EAA4B,IAAhBb,EAAoBI,EAAMG,OAAS,EAAIP,EAAc,EACvEC,EAAeY,KAQXE,EAASX,EAAM3C,KAAI,SAACuD,GAAD,OACvB,kBAACC,EAAA,EAAD,CACEC,UAAW,kBAAMf,GAAa,IAC9BgB,SAAU,kBAAMhB,GAAa,IAC7BrC,IAAKkD,GAEL,yBAAK5D,UAAU,qBAAqB2B,MAAO,CAAEC,gBAAgB,OAAD,OAASC,qBAAT,gBAAuC/B,EAAMkE,SAA7C,YAAyDJ,EAAzD,OAC1D,yBAAK7B,IAAG,UAAKF,qBAAL,gBAAmC/B,EAAMkE,SAAzC,YAAqDJ,GAAQ5B,IAAG,UAAKlC,EAAMkE,SAAX,YAA+BrC,MAAO,CAAEsC,WAAY,iBAKlI,OACE,kBAACC,EAAA,EAAD,CACEtB,YAAaA,EACbY,KAAMA,EACNE,SAAUA,EACV1D,UAAU,kBAEV,kBAACmE,EAAA,EAAD,CAAoBnB,MAAOA,EAAOJ,YAAaA,EAAawB,eAxB9C,SAACC,GACbvB,GACJD,EAAewB,MAuBZV,EACD,kBAACW,EAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,WAAWJ,eAAgBV,IAC3E,kBAACY,EAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,OAAOJ,eAAgBZ,M,wBCY9DiB,E,kDAhEb,WAAY3E,GAAQ,IAAD,8BACjB,cAAMA,IACD4E,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAHD,E,wDAMPE,GACV,IAAMC,EAAW3E,KAAKL,MAAM+E,YAAYE,MAAM,MAC9C,GAAwB,IAApBD,EAAS3B,OAAc,OAAO2B,EAClC,GAAKA,EAAS3B,OAAS,IAAO,EAAG,CAG/B,IAFA,IAAI6B,EAAS,EACTC,EAAU,EACL/B,EAAI,EAAGA,EAAI4B,EAAS3B,SAAUD,EAChCA,EAAI,IAAO,EAAG8B,GAAUF,EAAS5B,IAAM4B,EAAS3B,OAAS,GACzD8B,GAAWH,EAAS5B,IAAM4B,EAAS3B,OAAS,GAEnD,MAAO,CAAC6B,EAAQC,M,iCAITJ,GACT,IAAMC,EAAW3E,KAAKL,MAAM+E,YAAYE,MAAM,MAC9C,GAAKD,EAAS3B,OAAS,IAAO,EAAG,CAG/B,IAFA,IAAM+B,EAAW,GACXC,EAAY,GACTjC,EAAI,EAAGA,EAAI4B,EAAS3B,SAAUD,EAChCA,EAAI,IAAO,EAAGgC,EAASE,KAAKN,EAAS5B,IACrCiC,EAAUC,KAAKN,EAAS5B,IAG/B,IADA,IAAMmC,EAAU,GACPnC,EAAI,EAAGA,EAAIgC,EAAS/B,SAAUD,EACrCmC,EAAQD,KAAK,kBAACE,EAAA,EAAD,CAAQR,SAAU,CAACI,EAAShC,GAAIiC,EAAUjC,OAEzD,OAAOmC,EAGT,OADAE,QAAQC,MAAM,wCACP,O,+BAIP,IAAMV,EAAW3E,KAAKuE,YAAYvE,KAAKL,MAAM+E,aACvCQ,EAAUlF,KAAKyE,WAAWzE,KAAKL,MAAM+E,aAG3C,OACE,kBAACY,EAAA,EAAD,CACEC,OAAQZ,EACRa,KAAM,GACNhE,MAAO,CAAEiE,MAAO,OAAQC,OAAQ,QAChC7F,UAAU,QAEV,kBAAC8F,EAAA,EAAD,CACEC,YAAa,6NACbC,QAAS,GACTC,SAAU,IACVC,YAAa,EACbC,IAAG,gEAdE,4BAcF,2CAbW,gHAefd,O,GA3DcrE,IAAMC,WCGvBmF,EAAa,CACjBC,UAAW,aACXC,YAAa,2BACbC,SAAU,WACVC,QAAS,UACTC,YAAa,eACbC,cAAe,sBACfC,YAAa,eACbC,YAAa,yBACbC,aAAc,gBACdC,UAAW,oBACXC,WAAY,sBACZC,gBAAiB,sBACjBC,gBAAiB,4BAEbC,EAAY,CAChBC,UAAW,6BACXC,gBAAiB,uBACjBC,WAAY,eAGOC,E,kDACnB,WAAYxH,GAAQ,IAAD,8BACjB,cAAMA,IACDyH,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAK6C,aAAe,EAAKA,aAAa7C,KAAlB,gBAHH,E,0DAMLxD,GACZ,IAAMsG,EAAqBC,OAAOC,KAAKvB,GACpCwB,MAAK,SAACC,EAAMC,GACX,MAAmB,OAAf3G,EAAK0G,IAAiD,QAA/B1G,EAAK2G,GAAMzE,UAAU,EAAG,GAAqB,EACrC,QAA/BlC,EAAK0G,GAAMxE,UAAU,EAAG,IAA+B,OAAflC,EAAK2G,IAAwB,EAElE,KAERzH,KAAI,SAACK,GACJ,MAAkC,QAA9BS,EAAKT,GAAK2C,UAAU,EAAG,GAEvB,kBAAC5B,EAAA,EAAD,CAAKsG,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAKjI,UAAU,uBAAuBU,IAAKA,GACjG,IADH,IAGG0F,EAAW1F,IAGE,OAAdS,EAAKT,GAEP,kBAACe,EAAA,EAAD,CAAKsG,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAKjI,UAAU,yCAAyCU,IAAKA,GACnH,IADH,IAGX0F,EAAW1F,IAIG,QAEX,OACE,kBAACa,EAAA,EAAD,KACE,wBAAIvB,UAAU,mBAAd,cACA,yBAAKA,UAAU,6BACdyH,K,mCAKMtG,GACX,IAAMgH,EAAeT,OAAOC,KAAKT,GAAW7G,KAAI,SAAC+H,GAC/C,GAAIjH,EAAKiH,GACP,OACE,kBAAC3G,EAAA,EAAD,CAAKsG,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAKjI,UAAU,cAAcU,IAAK0H,GACzF,uBAAGpI,UAAU,yBAAyBkH,EAAUkB,IAChD,2BACGjH,EAAKiH,GACL,IAFH,eASR,OAAID,EAEA,kBAAC5G,EAAA,EAAD,KACE,wBAAIvB,UAAU,mBAAd,cACA,yBAAKA,UAAU,6BACdmI,GAIA,O,+BAIP,GAAgC,OAA5BhI,KAAKL,MAAMuI,aACb,OAAO,8BAET,IAAMlH,EAAOhB,KAAKL,MAAMuI,aAClBC,EAAc,4BAAQtI,UAAU,QAAQY,QAAST,KAAKL,MAAMyI,YAA9C,QACpB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAOxI,UAAU,sBAAsByI,OAAQtI,KAAKL,MAAM4I,YAAaV,KAAK,MAC1E,kBAACW,EAAA,EAAD,CAAaC,MAAON,IACpB,kBAAC,EAAD,CAAerF,eAAgB9B,EAAK8B,eAAgBe,SAAU7C,EAAKW,YACnE,kBAAC+G,EAAA,EAAD,CAAW7I,UAAU,OACnB,wBAAIA,UAAU,2BAA2BmB,EAAKiB,MAC9C,kBAACb,EAAA,EAAD,CAAKvB,UAAU,qCACb,yBAAKA,UAAU,kCACf,kBAACyB,EAAA,EAAD,CAAKzB,UAAU,OAAO+H,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,IACvE9G,EAAKQ,MACL,IAFH,WAKA,kBAACF,EAAA,EAAD,CAAKzB,UAAU,OAAO+H,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,IACvE9G,EAAKmB,SAAS,GAAGwG,cACjB3H,EAAKmB,SAASG,MAAM,IAEvB,kBAAChB,EAAA,EAAD,CAAKzB,UAAU,OAAO+H,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,IACvE9G,EAAK4H,eAGT5H,EAAK6H,UAEF,kBAACzH,EAAA,EAAD,KACE,yBAAKvB,UAAU,kCACf,uBAAGA,UAAU,wBAAwBmB,EAAK6H,WAG/C7I,KAAKqH,aAAarG,GAClBhB,KAAKoH,cAAcpG,GACpB,kBAACI,EAAA,EAAD,CAAKvB,UAAU,uBACb,yBAAKA,UAAU,kCACf,kBAAC,EAAD,CAAU6E,YAAa1D,EAAK0D,gBAGhC,kBAACoE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQvI,MAAM,YAAYX,UAAU,kBAAkBY,QAAST,KAAKL,MAAMyI,YAA1E,gB,GAlH2BvH,IAAMC,WCF9BkI,E,kDAlBb,WAAYrJ,GAAQ,IAAD,8BACjB,cAAMA,IACDsJ,MAAQ,GAFI,E,qDAMT,IAAD,OAEDC,EADclJ,KAAKL,MAAMwJ,KACNjJ,KAAI,SAACc,GAAD,OAAU,kBAAC,EAAD,CAAeA,KAAMA,EAAMT,IAAKS,EAAKW,UAAWR,WAAY,EAAKxB,MAAMwB,gBAC9G,OACE,kBAACC,EAAA,EAAD,CAAKvB,UAAU,0BACZqJ,EACD,kBAAC,EAAD,CAAWhB,aAAclI,KAAKL,MAAMuI,aAAcE,WAAYpI,KAAKL,MAAMyI,WAAYG,YAAavI,KAAKL,MAAM4I,mB,GAb9F1H,IAAMC,W,uCCCtBsI,IAAEC,KAAKC,QAAQC,UAAUC,YAEhCJ,IAAEC,KAAKC,QAAQG,aAAa,CACxBC,cAAeC,EAAQ,IACvBC,QAASD,EAAQ,IACjBE,UAAWF,EAAQ,MAGvB,IAAMG,EAAY,CAChB,CAAC,WAAY,WACb,CAAC,WAAY,YAGTC,EAAoB,CACxB,IAAO,CACL,YAAe,CAAC,WAAY,WAC5B,KAAQ,MAEV,WAAY,CACV,YAAe,CAAC,WAAY,WAC5B,KAAQ,MAEV,QAAW,CACT,YAAe,CAAC,WAAY,WAC5B,KAAQ,IAEV,aAAc,CACZ,YAAe,CAAC,WAAY,WAC5B,KAAQ,KA6EGC,E,kDAxEb,WAAYrK,GAAQ,IAAD,8BACjB,cAAMA,IACDsJ,MAAQ,CACX/D,QAAS,MAEX,EAAKT,WAAa,EAAKA,WAAWD,KAAhB,gBALD,E,+DAQAyF,GACbA,EAAUd,OAASnJ,KAAKL,MAAMwJ,MAChCnJ,KAAKyE,WAAWzE,KAAKL,MAAMwJ,Q,0CAK7BnJ,KAAKyE,WAAWzE,KAAKL,MAAMwJ,Q,iCAGlBA,GAAO,IAAD,OACXjE,EAAU,GADC,WAENlE,GACP,GAAGmI,EAAKnI,GAAMkJ,eAAe,eAAe,CAC1C,IAAMvF,EAAWwE,EAAKnI,GAAL,YAA0B4D,MAAM,MACjD,GAAKD,EAAS3B,OAAS,IAAO,EAAG,CAG/B,IAFA,IAAM+B,EAAW,GACXC,EAAY,GACTjC,EAAI,EAAGA,EAAI4B,EAAS3B,SAAUD,EAChCA,EAAI,IAAO,EAAGgC,EAASE,KAAKN,EAAS5B,IACrCiC,EAAUC,KAAKN,EAAS5B,IAE/B,IAAK,IAAIA,EAAI,EAAGA,EAAIgC,EAAS/B,SAAUD,EACrCmC,EAAQD,KACN,kBAACE,EAAA,EAAD,CAAQR,SAAU,CAACI,EAAShC,GAAIiC,EAAUjC,IAAKxC,IAAKwE,EAAShC,IAC3D,kBAACoH,EAAA,EAAD,KAAO,0BAAM3I,MAAO,CAAC4I,OAAQ,WAAY3J,QAAS,kBAAM,EAAKd,MAAMwB,WAAWgI,EAAKnI,MAASmI,EAAKnI,GAAL,cAKlGoE,QAAQC,MAAM,0CAlBpB,IAAK,IAAIrE,KAAQmI,EAAO,EAAfnI,GAsBThB,KAAKqK,SAAS,CAAEnF,QAASA,M,+BAIzB,IAAMP,EAAWoF,EAAkB/J,KAAKL,MAAM2K,kBAAkB5F,YAC1Dc,EAAOuE,EAAkB/J,KAAKL,MAAM2K,kBAAkB9E,KAGtDN,EAAUlF,KAAKiJ,MAAM/D,QAC3B,OACE,kBAACI,EAAA,EAAD,CACEC,OAAQZ,EACRa,KAAMA,EACNhE,MAAO,CAAEiE,MAAO,OAAQC,OAAQ,QAChC7F,UAAU,gBACV0K,UAAWT,GAEX,kBAACnE,EAAA,EAAD,CACEC,YAAa,6NACbC,QAAS,GACTC,SAAU,IACVC,YAAa,EACbC,IAAG,gEAhBE,4BAgBF,2CAfW,gHAiBfd,O,GAnEarE,IAAMC,W,gBC9BtB0J,EAAWjD,OAAOkD,OAAOC,GAGzBC,GAFYpD,OAAOC,KAAKkD,GAEN,CAAC,MAAO,WAAY,UAAW,eAkExCE,E,kDA/Db,WAAYjL,GAAQ,IAAD,8BACjB,cAAMA,IACDsJ,MAAQ,CACXqB,iBAAkB,MAClBnB,KAAMqB,EACNtC,aAAc,KACdK,aAAa,GAEf,EAAKsC,oBAAsB,EAAKA,oBAAoBrG,KAAzB,gBAC3B,EAAKsG,QAAU,EAAKA,QAAQtG,KAAb,gBACf,EAAKrD,WAAa,EAAKA,WAAWqD,KAAhB,gBAClB,EAAK4D,WAAa,EAAKA,WAAW5D,KAAhB,gBAXD,E,sDAc8B,IAC3CuG,EADEC,EAAwC,uDAA7BhL,KAAKiJ,MAAMqB,iBAG1BS,EADe,QAAbC,EACaR,EAASS,QAAO,SAACjK,GAAD,OAAUA,EAAKgK,WAAaA,KAE5CR,EAGjBxK,KAAKqK,SAAS,CAAElB,KAAM4B,M,0CAGJC,GAClBhL,KAAKqK,SAAS,CAAEC,iBAAkBU,IAClChL,KAAK8K,QAAQE,K,iCAGJhK,GACThB,KAAKqK,SACH,CACEnC,aAAclH,EACduH,aAAa,M,mCAMjBvI,KAAKqK,SAAS,CAAE9B,aAAa,M,+BAI7B,OACE,kBAAC2C,EAAA,EAAD,CAAWC,OAAO,EAAMtL,UAAU,0BAChC,kBAACuB,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAACE,EAAA,EAAD,CAAKyG,GAAG,IAAIlI,UAAU,YACpB,kBAACuB,EAAA,EAAD,KACE,kBAAC,EAAD,CAASd,SAAUN,KAAKiJ,MAAMqB,iBAAkBrK,QAAS0K,EAAiBhK,SAAUX,KAAK6K,uBAE3F,kBAAC,EAAD,CAAUP,iBAAkBtK,KAAKiJ,MAAMqB,iBAAkBnB,KAAMnJ,KAAKiJ,MAAME,KAAMjB,aAAclI,KAAKiJ,MAAMf,aAAc/G,WAAYnB,KAAKmB,WAAYoH,YAAavI,KAAKiJ,MAAMV,YAAaH,WAAYpI,KAAKoI,cAE5M,kBAAC9G,EAAA,EAAD,CAAKyG,GAAG,IAAIlI,UAAU,iBACpB,kBAAC,EAAD,CAASyK,iBAAkBtK,KAAKiJ,MAAMqB,iBAAkBnB,KAAMnJ,KAAKiJ,MAAME,KAAMhI,WAAYnB,KAAKmB,oB,GAxDzFN,IAAMC,W,MCFVsK,MATf,WACE,OACE,yBAAKvL,UAAU,QAEb,kBAAC,EAAD,QCGcwL,QACW,cAA7BC,OAAON,SAASO,UAEkB,UAA7BD,OAAON,SAASO,UAEhBD,OAAON,SAASO,SAASC,MAC1B,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAAC/G,GACND,QAAQC,MAAMA,EAAMgH,c","file":"static/js/main.27d19a7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nfunction Header(props) {\n  return (\n    <div id=\"housing-header\" className=\"mb-4\">\n      <h1>Welcome to Student Life’s Washington University Housing&nbsp;Guide!</h1>\n      <p>Curious what your first freshman residence hall will look like? Can’t figure out where you want to live next year? We’ve got you covered with our Housing Guide for all Residential Life dorms and apartments. Each page includes photos of the rooms and building, a list of pros and cons, pricing, estimated walk times and a summary. Please note: photographs are meant to be a representative sample of the dorm or apartment; there may be major variance between different rooms in the same building.</p>\n      <p>This is a living document, so feel free to make suggestions as we continually update and add to this guide. If you find any inaccurate information or would like to submit photos of your Residential Life suite or apartment, please contact photo@studlife.com</p>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { ButtonToggle, ButtonGroup } from 'reactstrap';\n\nclass Filters extends React.Component {\n  render() {\n    const buttons = this.props.options.map((option) => (\n      <ButtonToggle\n        active={this.props.selected === option}\n        key={option}\n        color=\"primary\"\n        className=\"filter-btn\"\n        onClick={(e) => this.props.onChange(option, e)}\n      >\n        {option}\n      </ButtonToggle>\n    ));\n    return (\n      <ButtonGroup>\n        {buttons}\n      </ButtonGroup>\n    );\n  }\n}\n\nexport default Filters;\n","import React from 'react';\nimport {\n  Container, Row, Col, Card, CardText,\n  CardBody, CardTitle,\n} from 'reactstrap';\n\nexport default class SingleListing extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    // TODO: onKeyDown={return event.keyCode != 13 || this.selectDorm}\n    // add enter key on dorm selection\n    const dorm = this.props.dorm;\n    return (\n      <Card className=\"single-listing cursor-pointer w-100 mb-3\" tabIndex=\"0\" onClick={() => this.props.selectDorm(dorm)}>\n        <Row noGutters>\n          <Col sm=\"4\">\n            <div className=\"dorm-thumbnail-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/img/thumbs/${this.props.dorm.shortName}.png)`}}>\n              <img className=\"dorm-thumbnail\" src={`${process.env.PUBLIC_URL}/img/thumbs/${this.props.dorm.shortName}.png`} alt={dorm.shortName} />\n            </div>\n          </Col>\n          <Col sm=\"8\">\n            <CardBody>\n              <CardTitle tag=\"h2\">{dorm.name}</CardTitle>\n              <CardText>{`${dorm.style} ${dorm.roomType.charAt(0).toLowerCase()}${dorm.roomType.slice(1)}`}</CardText>\n            </CardBody>\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport {\n  Carousel, CarouselItem, CarouselControl, CarouselIndicators,\n} from 'reactstrap';\n\nconst ModalCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const items = props.carouselImages;\n  for (let i = 0; i < items.length; ++i) {\n    const value = items[i];\n    if (value.substring(0, 8) === 'exterior') {\n      items.splice(i, 1);\n      items.unshift(value);\n      break;\n    }\n  }\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  const slides = items.map((item) => (\n    <CarouselItem\n      onExiting={() => setAnimating(true)}\n      onExited={() => setAnimating(false)}\n      key={item}\n    >\n      <div className=\"modal-carousel-img\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/img/${props.dormName}/${item})` }}>\n        <img src={`${process.env.PUBLIC_URL}/img/${props.dormName}/${item}`} alt={`${props.dormName} picture`} style={{ visibility: 'hidden' }} />\n      </div>\n    </CarouselItem>\n  ));\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n      className=\"modal-carousel\"\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n};\n\nexport default ModalCarousel;\n","import React from 'react';\nimport {\n  Map, TileLayer, Marker, Popup,\n} from 'react-leaflet';\n\nclass ModalMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getPosition = this.getPosition.bind(this);\n    this.getMarkers = this.getMarkers.bind(this);\n  }\n\n  getPosition(coordinates) {\n    const position = this.props.coordinates.split(', ');\n    if (position.length === 2) return position;\n    if ((position.length % 2) === 0) {\n      let avgLat = 0;\n      let avgLong = 0;\n      for (let i = 0; i < position.length; ++i) {\n        if ((i % 2) === 0) avgLat += position[i] / (position.length / 2);\n        else avgLong += position[i] / (position.length / 2);\n      }\n      return [avgLat, avgLong];\n    }\n  }\n\n  getMarkers(coordinates) {\n    const position = this.props.coordinates.split(', ');\n    if ((position.length % 2) === 0) {\n      const latArray = [];\n      const longArray = [];\n      for (let i = 0; i < position.length; ++i) {\n        if ((i % 2) === 0) latArray.push(position[i]);\n        else longArray.push(position[i]);\n      }\n      const markers = [];\n      for (let i = 0; i < latArray.length; ++i) {\n        markers.push(<Marker position={[latArray[i], longArray[i]]} />);\n      }\n      return markers;\n    }\n    console.error('Invalid coordinates for current dorm');\n    return null;\n  }\n\n  render() {\n    const position = this.getPosition(this.props.coordinates);\n    const markers = this.getMarkers(this.props.coordinates);\n    const id = 'ck9nkgte3058o1ip80xvsnybg';\n    const accessToken = 'pk.eyJ1Ijoic3R1ZGVudGxpZmVuZXdzcGFwZXIiLCJhIjoiY2s5bmhrZTFzMDJjajNmbzd2eHpoc3BraCJ9.mfW3MvzjG6Rvch9CF1q-Sg';\n    return (\n      <Map\n        center={position}\n        zoom={18}\n        style={{ width: '100%', height: '100%' }}\n        className=\"mx-3\"\n      >\n        <TileLayer\n          attribution={'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'}\n          maxZoom={20}\n          tileSize={512}\n          zoomOffset={-1}\n          url={`https://api.mapbox.com/styles/v1/studentlifenewspaper/${id}/tiles/{z}/{x}/{y}?access_token=${accessToken}`}\n        />\n        {markers}\n      </Map>\n    );\n  }\n}\n\nexport default ModalMap;\n","import React from 'react';\nimport {\n  Container, Row, Col, CardDeck,\n  Button, Modal, ModalHeader, ModalBody, ModalFooter,\n} from 'reactstrap';\nimport ModalCarousel from './ModalCarousel.js';\nimport ModalMap from './ModalMap.js';\n\nconst facilities = {\n  studyRoom: 'Study room',\n  computerLab: 'Computer and printer lab',\n  elevator: 'Elevator',\n  kitchen: 'Kitchen',\n  seminarRoom: 'Seminar room',\n  musicPractice: 'Music practice room',\n  laundryRoom: 'Laundry room',\n  closeDining: 'Close to school dining',\n  closeParking: 'Close parking',\n  closeMail: 'Close to mailroom',\n  closeMetro: 'Close to Metro stop',\n  closeClocktower: 'Close to Clocktower',\n  closeCirculator: 'Close to Circulator stop',\n};\nconst walkTimes = {\n  timeToDUC: 'Danforth University Center',\n  timeToBrookings: 'Brookings Quadrangle',\n  timeToLoop: 'Delmar Loop',\n};\n\nexport default class DormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getFacilities = this.getFacilities.bind(this);\n    this.getWalkTimes = this.getWalkTimes.bind(this);\n  }\n\n  getFacilities(dorm) {\n    const facilitiesElements = Object.keys(facilities)\n      .sort((key1, key2) => {\n        if (dorm[key1] === 'No' && dorm[key2].substring(0, 3) === 'Yes') return +1;\n        if (dorm[key1].substring(0, 3) === 'Yes' && dorm[key2] === 'No') return -1;\n\n        return 0;\n      })\n      .map((key) => {\n        if (dorm[key].substring(0, 3) === 'Yes') {\n          return (\n            <Col xs={{ size: 12, offset: 1 }} md={{ size: 4, offset: 0 }} className=\"mb-1 modal-body-text\" key={key}>\n              {' '}\n              -\n              {facilities[key]}\n            </Col>\n          );\n        } if (dorm[key] === 'No') {\n          return (\n            <Col xs={{ size: 12, offset: 1 }} md={{ size: 4, offset: 0 }} className=\"mb-1 missing-facilitiy modal-body-text\" key={key}>\n              {' '}\n              -\n{facilities[key]}\n            </Col>\n          );\n        }\n        return null;\n      });\n    return (\n      <Row>\n        <h4 className=\"w-100 mx-3 mt-4\">Facilities</h4>\n        <div className=\"modal-divider-horizontal\" />\n        {facilitiesElements}\n      </Row>\n    );\n  }\n\n  getWalkTimes(dorm) {\n    const timeElements = Object.keys(walkTimes).map((time) => {\n      if (dorm[time]) {\n        return (\n          <Col xs={{ size: 12, offset: 0 }} md={{ size: 4, offset: 0 }} className=\"text-center\" key={time}>\n            <p className=\"font-weight-bold mb-1\">{walkTimes[time]}</p>\n            <p>\n              {dorm[time]}\n              {' '}\n              minutes\n            </p>\n          </Col>\n        );\n      }\n    });\n    if (timeElements) {\n      return (\n        <Row>\n          <h4 className=\"w-100 mx-3 mt-4\">Walk Times</h4>\n          <div className=\"modal-divider-horizontal\" />\n          {timeElements}\n        </Row>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    if (this.props.selectedDorm === null) {\n      return <div />;\n    }\n    const dorm = this.props.selectedDorm;\n    const closeButton = <button className=\"close\" onClick={this.props.closeModal}>&times;</button>;\n    return (\n      <div>\n        <Modal className=\"dorm-modal w80 my-0\" isOpen={this.props.modalIsOpen} size=\"lg\">\n          <ModalHeader close={closeButton} />\n          <ModalCarousel carouselImages={dorm.carouselImages} dormName={dorm.shortName} />\n          <ModalBody className=\"m-4\">\n            <h1 className=\"modal-title text-center\">{dorm.name}</h1>\n            <Row className=\"text-center mt-4 font-weight-bold\">\n              <div className=\"modal-divider-horizontal mt-1\" />\n              <Col className=\"mb-3\" xs={{ size: 12, offset: 0 }} md={{ size: 4, offset: 0 }}>\n                {dorm.style}\n                {' '}\n                housing\n              </Col>\n              <Col className=\"mb-3\" xs={{ size: 12, offset: 0 }} md={{ size: 4, offset: 0 }}>\n                {dorm.roomType[0].toUpperCase()}\n                {dorm.roomType.slice(1)}\n              </Col>\n              <Col className=\"mb-3\" xs={{ size: 12, offset: 0 }} md={{ size: 4, offset: 0 }}>\n                {dorm.bathroomType}\n              </Col>\n            </Row>\n            {dorm.longDesc\n                && (\n                <Row>\n                  <div className=\"modal-divider-horizontal mt-4\" />\n                  <p className=\"mx-3 modal-body-text\">{dorm.longDesc}</p>\n                </Row>\n                )}\n            {this.getWalkTimes(dorm)}\n            {this.getFacilities(dorm)}\n            <Row className=\"modal-map-container\">\n              <div className=\"modal-divider-horizontal mt-4\" />\n              <ModalMap coordinates={dorm.coordinates} />\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" className=\"modal-close-btn\" onClick={this.props.closeModal}>Close</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Container, Row, Col, CardDeck,\n} from 'reactstrap';\nimport SingleListing from './SingleListing.js';\nimport DormModal from './DormModal.js';\n\n\nclass Listings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const currentData = this.props.data;\n    const list = currentData.map((dorm) => <SingleListing dorm={dorm} key={dorm.shortName} selectDorm={this.props.selectDorm} />);\n    return (\n      <Row className=\"listing-container mt-3\">\n        {list}\n        <DormModal selectedDorm={this.props.selectedDorm} closeModal={this.props.closeModal} modalIsOpen={this.props.modalIsOpen} />\n      </Row>\n    );\n  }\n}\n\nexport default Listings;\n","import React from 'react';\nimport {\n  Map, TileLayer, Marker, Popup,\n} from 'react-leaflet';\n\n// https://github.com/PaulLeCam/react-leaflet/issues/453#issuecomment-410450387\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst mapBounds = [\n  [38.633863, -90.325649],\n  [38.662028, -90.288587]\n];\n\nconst locationPositions = {\n  'All': {\n    'coordinates': [38.648435, -90.307769],\n    'zoom': 14.5,\n  },\n  'South 40': {\n    'coordinates': [38.644432, -90.313888],\n    'zoom': 16.5,\n  },\n  'Village': {\n    'coordinates': [38.650777, -90.313331],\n    'zoom': 17,\n  },\n  'Off Campus': {\n    'coordinates': [38.652451, -90.300219],\n    'zoom': 14,\n  },\n}\n\nclass SideMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markers: null,\n    };\n    this.getMarkers = this.getMarkers.bind(this);\n  }\n  \n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.getMarkers(this.props.data);\n    }\n  }\n  \n  componentDidMount(){\n    this.getMarkers(this.props.data);\n  }\n  \n  getMarkers(data) {\n    let markers = [];\n    for (let dorm in data) {\n      if(data[dorm].hasOwnProperty('coordinates')){\n        const position = data[dorm]['coordinates'].split(', ');\n        if ((position.length % 2) === 0) {\n          const latArray = [];\n          const longArray = [];\n          for (let i = 0; i < position.length; ++i) {\n            if ((i % 2) === 0) latArray.push(position[i]);\n            else longArray.push(position[i]);\n          }\n          for (let i = 0; i < latArray.length; ++i) {\n            markers.push(\n              <Marker position={[latArray[i], longArray[i]]} key={latArray[i]}>\n                <Popup><span style={{cursor: 'pointer'}} onClick={() => this.props.selectDorm(data[dorm])}>{data[dorm]['name']}</span></Popup>\n              </Marker>\n            );\n          }\n        } else {\n          console.error('Invalid coordinates for current dorm');          \n        }\n      }\n    }\n    this.setState({ markers: markers });\n  }\n  \n  render() {\n    const position = locationPositions[this.props.selectedLocation].coordinates;\n    const zoom = locationPositions[this.props.selectedLocation].zoom;\n    const id = 'ck9nkgte3058o1ip80xvsnybg';\n    const accessToken = 'pk.eyJ1Ijoic3R1ZGVudGxpZmVuZXdzcGFwZXIiLCJhIjoiY2s5bmhrZTFzMDJjajNmbzd2eHpoc3BraCJ9.mfW3MvzjG6Rvch9CF1q-Sg';\n    const markers = this.state.markers;\n    return (\n      <Map\n        center={position}\n        zoom={zoom}\n        style={{ width: '100%', height: '100%' }}\n        className=\"mx-3 side-map\"\n        maxBounds={mapBounds}\n      >\n        <TileLayer\n          attribution={'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'}\n          maxZoom={20}\n          tileSize={512}\n          zoomOffset={-1}\n          url={`https://api.mapbox.com/styles/v1/studentlifenewspaper/${id}/tiles/{z}/{x}/{y}?access_token=${accessToken}`}\n        />\n        {markers}\n      </Map>\n    );\n  }\n}\n\nexport default SideMap;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Header from './Header.js';\nimport Filters from './Filters.js';\nimport Listings from './Listings.js';\nimport SideMap from './SideMap.js';\n\nimport './Main.css';\n\nimport jsonData from '../data/data.json';\n\nconst dormData = Object.values(jsonData);\nconst dormNames = Object.keys(jsonData);\n\nconst locationOptions = ['All', 'South 40', 'Village', 'Off Campus'];\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedLocation: 'All',\n      data: dormData,\n      selectedDorm: null,\n      modalIsOpen: false,\n    };\n    this.onLocationSelection = this.onLocationSelection.bind(this);\n    this.getData = this.getData.bind(this);\n    this.selectDorm = this.selectDorm.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  getData(location = this.state.selectedLocation) {\n    let filteredData;\n    if (location !== 'All') {\n      filteredData = dormData.filter((dorm) => dorm.location === location);\n    } else {\n      filteredData = dormData;\n    }\n\n    this.setState({ data: filteredData });\n  }\n  \n  onLocationSelection(location) {\n    this.setState({ selectedLocation: location });\n    this.getData(location);\n  }\n\n  selectDorm(dorm) {\n    this.setState(\n      {\n        selectedDorm: dorm,\n        modalIsOpen: true,\n      },\n    );\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n    return (\n      <Container fluid={true} className=\"housing-container px-5\">\n        <Row>\n          <Header />\n          <Col md=\"6\" className=\"listings\">\n            <Row>\n              <Filters selected={this.state.selectedLocation} options={locationOptions} onChange={this.onLocationSelection} />\n            </Row>\n            <Listings selectedLocation={this.state.selectedLocation} data={this.state.data} selectedDorm={this.state.selectedDorm} selectDorm={this.selectDorm} modalIsOpen={this.state.modalIsOpen} closeModal={this.closeModal}/>\n          </Col>\n          <Col md=\"6\" className=\"side-map pl-0\">\n            <SideMap selectedLocation={this.state.selectedLocation} data={this.state.data} selectDorm={this.selectDorm}/>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport logo from './logo.svg';\nimport Main from './components/Main.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"root\">\n\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}